name: Test Runner

on:
  pull_request:
    with:
      tests: all
      runner: uml
      kernel: '5.16'
  workflow_dispatch:
    inputs:
      tests:
        description: Specific test to run (comma separated, no spaces)
        default: all
        required: false
      runner:
        description: Type of runner (qemu, uml, or host)
        default: uml
        required: false
      kernel:
        description: Kernel version (5.15, 5.16, etc)
        default: '5.16'
        required: false

jobs:
  test-runner:
    runs-on: ubuntu-latest
    timeout-minutes: 120

    env: |
      RUN_TESTS="all"
      RUNNER="uml"
      KERNEL="5.16"

    steps:
      - name: Sanitize Input
        run: |
          if [[ ! -z "${INPUT_TESTS}" ]]; then
            RUN_TESTS=${INPUT_TESTS}
          fi
          if [[ ! -z "${INPUT_RUNNER}" ]]; then
            RUNNER=${INPUT_RUNNER}
          fi
          if [[ ! -z "${INPUT_KERNEL}" ]]; then
            KERNEL=${INPUT_KERNEL}
          fi
      - uses: actions/checkout@v2
        with:
          path: iwd

      - name: Install packages
        run: |
          sudo apt update
          sudo apt install qemu-system make git iw iproute2 haveged pip python-docutils pkg-config libreadline-dev libtool automake flex bison libelf-dev bc libssl-dev libnl-genl-3-dev libdbus-1-dev libnl-route-3-dev isc-dhcp-server radvd libc6 build-essential
          sudo pip install termcolor prettytable pyroute2 pycrypto
          sudo modprobe pkcs8_key_parser

          # For some reason /etc/radvd.conf isn't getting installed
          sudo touch /etc/radvd.conf

      - name: Cache QEMU Kernel
        id: cache-kernel
        uses: actions/cache@v2
        with:
          path: bzImage-$KERNEL
          key: bzImage-$KERNEL

      - name: Cache UML Kernel
        id: cache-uml-kernel
        uses: actions/cache@v2
        with:
          path: um-linux-$KERNEL
          key: um-linux-$KERNEL

      - name: Cache Hostapd
        id: cache-hostapd
        uses: actions/cache@v2
        with:
          path: |
            hostapd
            hostapd_cli
          key: hostapd

      - name: Cache WpaSupplicant
        id: cache-wpas
        uses: actions/cache@v2
        with:
          path: |
            wpa_supplicant
            wpa_cli
          key: wpa_supplicant

      - name: Build UML kernel
        if: |
          steps.cache-uml-kernel.outputs.cache-hit != 'true' &&
          env.RUNNER == 'uml'
        run: |
          git clone -b v$KERNEL --depth=1 https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git linux/
          cd linux/
          git checkout v$KERNEL -b $KERNEL
          make ARCH=um x86_64_defconfig
          sh ../iwd/tools/test_runner_kernel_config
          echo 'yes' | make ARCH=um -j4
          cp linux ../um-linux-$KERNEL

      - name: Build kernel
        if: |
          steps.cache-kernel.outputs.cache-hit != 'true' &&
          env.RUNNER == 'qemu'
        run: |
          git clone -b v$KERNEL --depth=1 https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git linux/
          cd linux/
          git checkout v$KERNEL -b $KERNEL
          make x86_64_defconfig
          make kvm_guest.config
          sh ../iwd/tools/test_runner_kernel_config
          echo 'yes' | make -j4
          cp arch/x86/boot/bzImage ../bzImage-$KERNEL

      - name: Clone Hostapd/WpaSupplicant
        run: git clone --depth=1 http://w1.fi/hostap.git hostap/

      - name: Build Hostapd
        if: steps.cache-hostapd.outputs.cache-hit != 'true'
        run: |
          cp iwd/doc/hostapd.config hostap/hostapd/.config
          cd hostap/hostapd
          make -j4
          # Copy binaries to root directory to be cached
          cp hostapd ../../
          cp hostapd_cli ../../

      - name: Build WpaSupplicant
        if: steps.cache-wpas.outputs.cache-hit != 'true'
        run: |
          cd hostap/wpa_supplicant
          cp defconfig .config
          make -j4
          cp wpa_supplicant ../../
          cp wpa_cli ../../

      - name: Build and Unit test
        run: |
          git clone --depth=1 https://git.kernel.org/pub/scm/libs/ell/ell.git ell/
          cd iwd/
          ./bootstrap-configure
          make -j4
          make check

      - name: Run test-runner
        shell: 'script -q -e -c "bash {0}"'
        run: |
          PATH=$(pwd):$PATH
          cd iwd/
          cd autotests/
          if [ "$RUN_TESTS" = "all" ]; then
            TESTS=$(grep -r -L hwsim_medium=yes | grep test.*hw.conf | cut -d/ -f1 | sort | sed -z 's/\n/,/g;s/,$/\n/')
          else
            TESTS=$RUN_TESTS
          fi
          cd ../

          ./tools/test-runner -k ../um-linux-$KERNEL -A $TESTS || true

      - name: Archive logs
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: test-runner-logs
          path: |
            um-linux-$KERNEL
